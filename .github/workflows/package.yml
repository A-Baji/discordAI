name: package_release

on:
  push:
    tags:
      - '*.*.*'
  pull_request:

jobs:
  test-package:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        py_ver:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - uses: actions/setup-python@v4
      with:
        python-version: ${{matrix.py_ver}}
    # - name: Checkout submodules
    #   run: git submodule update --init --recursive
    - name: Install Package
      run: pip install .
    - name: Test Package
      run: discordai -V
  release:
    needs: test-package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: version
        name: Get build metadata
        run: echo "::set-output name=discordai_version::$(cat discordai/version.py | grep -oP '\d+\.\d+\.\d+')"
      - name: Create release
        if: |
          github.event_name == 'push' &&
          startsWith(github.ref, 'refs/tags') &&
          github.repository_owner == 'A-Baji'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{steps.version.outputs.discordai_version}}
          release_name: Release ${{steps.version.outputs.discordai_version}}
          body: Release ${{steps.version.outputs.discordai_version}}
          draft: false
          prerelease: false
  package:
    needs: release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - macos-latest
          - ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install Dependencies
      run: pip install . pyinstaller==5.7
    # Package
    - name: Windows CLI Package
      if: ${{matrix.os == 'windows-latest'}}
      run: |
        pyinstaller discordai/command_line.py --console --onefile --name=discordai --add-binary='discordai/bot/cogs;discordai/bot/cogs' --hidden-import=openai
        Compress-Archive -Path dist\*discordai* -DestinationPath discordai-windows.zip
    - name: Mac CLI Package
      if: ${{matrix.os == 'macos-latest'}}
      run: |
        pyinstaller discordai/command_line.py --console --onefile --name=discordai --add-data='discordai/bot/cogs:discordai/bot/cogs' --hidden-import=openai --hidden-import=configparser
        zip -j discordai-macos.zip dist/*discordai*
    - name: Linux CLI Package
      if: ${{matrix.os == 'ubuntu-latest'}}
      run: |
        pyinstaller discordai/command_line.py --console --onefile --name=discordai --add-binary='discordai/bot/cogs:discordai/bot/cogs' --hidden-import=openai
        zip -j discordai-linux.zip dist/*discordai*
    # Upload
    - name: Upload Windows Package to Artifacts
      if: |
        matrix.os == 'windows-latest' &&
        github.event_name != 'push' &&
        !startsWith(github.ref, 'refs/tags')
      uses: actions/upload-artifact@v3
      with:
        name: discordai-windows
        path: dist/*discordai*
        retention-days: 1
    - name: Upload Windows Package to Release
      if: |
        matrix.os == 'windows-latest' &&
        github.event_name == 'push' &&
        startsWith(github.ref, 'refs/tags') &&
        github.repository_owner == 'A-Baji'
      uses: softprops/action-gh-release@v1
      with:
        files: ./*discordai*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload Mac Package to Artifacts
      if: |
        matrix.os == 'macos-latest' &&
        github.event_name != 'push' &&
        !startsWith(github.ref, 'refs/tags')
      uses: actions/upload-artifact@v3
      with:
        name: discordai-macos
        path: dist/*discordai*
        retention-days: 1
    - name: Upload Mac Package to Release
      if: |
        matrix.os == 'macos-latest' &&
        github.event_name == 'push' &&
        startsWith(github.ref, 'refs/tags') &&
        github.repository_owner == 'A-Baji'
      uses: softprops/action-gh-release@v1
      with:
        files: ./*discordai*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload Linux Package to Artifacts
      if: |
        matrix.os == 'ubuntu-latest' &&
        github.event_name != 'push' &&
        !startsWith(github.ref, 'refs/tags')
      uses: actions/upload-artifact@v3
      with:
        name: discordai-linux
        path: dist/*discordai*
        retention-days: 1
    - name: Upload Linux Package to Release
      if: |
        matrix.os == 'ubuntu-latest' &&
        github.event_name == 'push' &&
        startsWith(github.ref, 'refs/tags') &&
        github.repository_owner == 'A-Baji'
      uses: softprops/action-gh-release@v1
      with:
        files: ./*discordai*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
